{"version":3,"sources":["redux/types.js","components/Grid.js","redux/actions.js","components/Header.js","components/NameOfTheWeeks.js","components/TaskCreator.js","App.js","redux/Reducer.js","index.js"],"names":["ADDEVENT","CHOSETHEDAY","SETSTARTDAY","mapDispatchToProps","choseTheDay","payload","type","CalendarGrid","connect","state","startDay","chosenDay","events","day","moment","clone","startOf","daysArray","Array","map","add","className","dayItem","format","onClick","Object","keys","e","eventItem","setStartDay","Header","months","useState","show","setShow","to","style","marginLeft","value","name","prev","height","border","overflowY","month","onChange","target","NameOfTheWeeks","display","justifyContent","_","i","toString","addEvent","key","TaskCreator","task","setTask","idDay","App","console","log","path","exact","initialState","store","createStore","action","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c13ac0a.chunk.js","sourcesContent":["export const ADDEVENT = \"ADDEVENT\";\r\nexport const CHOSETHEDAY = \"CHOSETHEDAY\";\r\nexport const SETSTARTDAY = \"SETSTARTDAY\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {choseTheDay} from \"../redux/actions.js\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst CalendarGrid_ = ({startDay, choseTheDay, chosenDay, events}) => {\r\n  \r\n    const allDays = 42;\r\n    const day = moment(startDay).clone().startOf(\"month\").startOf(\"week\");\r\n    const daysArray = [...Array(allDays)].map(()=>day.add(1,\"day\").clone());\r\n \r\n    return (\r\n        <div className = \"componentGrid\">\r\n            {\r\n                daysArray.map((dayItem) =>(\r\n                    <div className = {dayItem.day()===6||dayItem.day()===0?`dayCell weekend ${dayItem.format(\"DDMMYYYY\")===chosenDay.format(\"DDMMYYYY\")?\"chosenDay\":\"\"}`:`dayCell ${dayItem.format(\"DDMMYYYY\")===chosenDay.format(\"DDMMYYYY\")?\"chosenDay\":\"\"}`} \r\n                        key={dayItem.format(\"DDMMYYYY\")}\r\n                        onClick={()=> {\r\n                            choseTheDay(dayItem.clone())\r\n                        }}\r\n                    >\r\n                        <div className = \"rowsInCell\">\r\n                            <div className = {chosenDay.format(\"MMMM\")===dayItem.format(\"MMMM\")?\"dayNumber\":\"dayNumber notCurrMonth\"}>\r\n                                {dayItem.format(\"D\")}\r\n                            </div>\r\n                            {Object.keys(events).map((e) => (\r\n                                dayItem.format(\"DDMMYYYY\")===e?events[e].map((eventItem)=>(\r\n                                    <div className=\"events\" key={eventItem+1}>\r\n                                        {eventItem}\r\n                                    </div>\r\n                                )):null\r\n                            ))}                     \r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    choseTheDay\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        startDay: state.startDay,\r\n        chosenDay: state.chosenDay,\r\n        events:state.events\r\n    }\r\n}\r\n\r\nexport const CalendarGrid = connect(mapStateToProps, mapDispatchToProps)(CalendarGrid_);","import {ADDEVENT, CHOSETHEDAY,SETSTARTDAY} from \"./types.js\"\r\n\r\n\r\n\r\nexport function choseTheDay(payload){\r\n    return {\r\n        type: CHOSETHEDAY,\r\n        payload\r\n    }\r\n}\r\nexport function setStartDay(payload){\r\n    return {\r\n        type: SETSTARTDAY,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function addEvent(key,value){\r\n    return {\r\n        type: ADDEVENT,\r\n        payload: {\r\n            key,\r\n            value,\r\n          },\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { setStartDay } from \"../redux/actions.js\"\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Header_({ setStartDay, months, startDay }) {\r\n  \r\n  \r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <div className=\"headerMain\">\r\n      <NavLink to=\"/taskcreator\">\r\n        <button className=\"currMonthInput\">Новая задача</button>\r\n      </NavLink>\r\n      <div className=\"currYear\" style={{marginLeft:\"20px\"}}>{moment(startDay).clone().format(\"YYYY\")}</div>\r\n      <label className=\"currMonthLabel\">\r\n        <input\r\n          type=\"button\"\r\n          value={moment(startDay).clone().format(\"MMMM\")}\r\n          name=\"currMonth\"\r\n          className=\"currMonthInput\"\r\n          onClick={() => setShow((prev) => !prev)}\r\n        />\r\n      </label>\r\n      <div\r\n        className=\"allMonths\"\r\n        style={{\r\n          height: show ? \"202px\" : 0,\r\n          border: show ? \"1px solid rgba(0, 0, 0, 0.1)\" : \"none\",\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        {months.map((month) => (\r\n          <label className=\"allMonthsLable\" key={moment(month).clone().format(\"MMMM\")}>\r\n            <div className=\"choseTheMonth\">{moment(month).clone().format(\"MMMM\")}</div>\r\n            <input\r\n              type=\"radio\"\r\n              className=\"theMonthInputeCheckPoint\"\r\n              name=\"theMonthInput\"\r\n              value={month}\r\n              onChange={(e) => setStartDay(e.target.value)}\r\n              onClick={() => setShow((prev) => !prev)}\r\n            />\r\n          </label>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    months: state.months,\r\n    startDay: state.startDay\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n    setStartDay\r\n};\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(Header_);","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\n\r\nexport function NameOfTheWeeks(){\r\n    return(\r\n        <>\r\n            {<div style={{display:\"flex\",justifyContent:\"space-around\"}}>\r\n            {[...Array(7)].map((_,i)=>(\r\n                    <div key={i.toString()} className=\"nameOfTheWeek\">{moment().day(i+1).clone().format(\"ddd\")}</div>\r\n                ))}\r\n            </div>}   \r\n        </> \r\n    )\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {addEvent} from \"../redux/actions.js\";\r\n\r\n\r\nfunction TaskCreator_({addEvent,chosenDay}){\r\n    const[task,setTask] = useState(\"\");\r\n    let idDay = chosenDay.clone().format(\"DDMMYYYY\");\r\n    return(\r\n        <div>\r\n            <NavLink to={\"/\"}>\r\n                <button onClick={()=>addEvent(idDay,task)}>Добавить задачу</button>\r\n            </NavLink>\r\n            <input type=\"text\" value={task} onChange={(e)=>setTask(e.target.value)}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addEvent\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        chosenDay: state.chosenDay,\r\n    }\r\n}\r\n\r\nexport const TaskCreator = connect(mapStateToProps, mapDispatchToProps)(TaskCreator_);","import React from \"react\";\nimport { CalendarGrid } from \"./components/Grid.js\";\nimport moment from \"moment\";\nimport { Header } from \"./components/Header.js\";\nimport { NameOfTheWeeks } from \"./components/NameOfTheWeeks.js\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { TaskCreator } from \"./components/TaskCreator.js\";\n\n\n\nfunction App() {\n  console.log(moment().clone().format(\"MMMM\"));\n  return (\n    <BrowserRouter>\n      <div className=\"Wrapper\">\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact>\n              <Header/>\n              <NameOfTheWeeks/>\n              <CalendarGrid/>\n            </Route>\n            <Route path=\"/taskcreator\">\n              <TaskCreator/>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { CHOSETHEDAY,SETSTARTDAY, ADDEVENT} from \"./types\";\r\nimport moment from \"moment\";\r\n\r\n//moment.updateLocale(\"en\", {week:{dow:1}});\r\n\r\nconst initialState = {\r\n    startDay: moment().clone().format(\"MM/DD/YYYY\"),\r\n    chosenDay: moment().clone(),\r\n    months:[\"01/01/2021\",\"02/01/2021\",\"03/01/2021\",\"04/01/2021\",\"05/01/2021\",\"06/01/2021\",\"07/01/2021\",\"08/01/2021\",\"09/01/2021\",\"10/01/2021\",\"11/01/2021\",\"12/01/2021\",],\r\n    events: {\r\n        \"01052021\":[\"TaskOne\",\"TaskTwo\"],\r\n    },\r\n}\r\n\r\nexport const Reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHOSETHEDAY:\r\n            return { ...state, chosenDay: action.payload };\r\n\r\n        case SETSTARTDAY:\r\n            return { ...state, startDay: action.payload };\r\n    \r\n        case ADDEVENT:\r\n            return {\r\n              ...state,\r\n             events:{...state.events ,[action.payload.key]:[...[state.events[action.payload.key]],action.payload.value]},\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Reducer } from './redux/Reducer';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  Reducer, applyMiddleware(thunk)\n);\n\nconst app = (\n  <Provider store = {store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n    app,\n  document.getElementById('root')\n);"],"sourceRoot":""}